-- This script is handling UI Effects for the top menu "HEAD_ELEMENTS"
-- Originally written by KonzZwodrei [ 07.04.2021 ] to add visual and audible Feedback to the UI
-- Add edit notes at the bottom of the script

-- CONNECTING CUSTOM PROPERTIES
local ACTIVE_HEAD_MENU = script:GetCustomProperty("ACTIVE_HEAD_MENU")
local HOVER_HEAD_MENU = script:GetCustomProperty("HOVER_HEAD_MENU")
local CHOSEN_MODE = script:GetCustomProperty("CHOSEN_MODE")
local HOVERED_MODE= script:GetCustomProperty("HOVERED_MODE")

-- CONNECTING SFX
local SFX_CLICK = World.FindObjectByName("SFX_CLICK")
local SFX_HOVER = World.FindObjectByName("SFX_HOVER")
local SFX_SLIDE_DOWN = World.FindObjectByName("SFX_SLIDE_DOWN")
local SFX_SLIDE_UP = World.FindObjectByName("SFX_SLIDE_UP")

-- CONNECTING BUTTONS
local BUTTON_PREMIUM_SHOP = World.FindObjectByName("BUTTON_PREMIUM_SHOP")
local BUTTON_ACHIEVEMENTS = World.FindObjectByName("BUTTON_ACHIEVEMENTS")
local BUTTON_LEADERBOARDS = World.FindObjectByName("BUTTON_LEADERBOARDS")

local DEPLOY = World.FindObjectByName("DEPLOY")
local DEPLOY_IDLE = World.FindObjectByName("DEPLOY_IDLE")
local DEPLOY_BUTTON = World.FindObjectByName("DEPLOY_BUTTON")

local CHOOSE_MODE_BUTTON = World.FindObjectByName("CHOOSE_MODE_BUTTON")
local CHOOSE_MODE_DROPDOWN = World.FindObjectByName("CHOOSE_MODE_DROPDOWN")
local CHOOSE_MODE_DROPDOWN_ARROW_OPEN = World.FindObjectByName("CHOOSE_MODE_DROPDOWN_ARROW_OPEN")
local CHOOSE_MODE_DROPDOWN_ARROW_CLOSE = World.FindObjectByName("CHOOSE_MODE_DROPDOWN_ARROW_CLOSE")
local CHOOSE_MODE_FIELDS_BUTTON = World.FindObjectByName("CHOOSE_MODE_FIELDS_BUTTON")
local CHOOSE_MODE_DESERT_BUTTON = World.FindObjectByName("CHOOSE_MODE_DESERT_BUTTON")
local CHOOSE_MODE_TUNDRA_BUTTON = World.FindObjectByName("CHOOSE_MODE_TUNDRA_BUTTON")

-- CONNECTING SWIPE PANELS
local CHOOSE_MODE = World.FindObjectByName("CHOOSE_MODE")

local SHELL_UPGRADE_CONFIRM = World.FindObjectByName("SHELL_UPGRADE_CONFIRM")
local SHELL_UPGRADE_DENY = World.FindObjectByName("SHELL_UPGRADE_DENY")

local TURRET_UPGRADE_CONFIRM = World.FindObjectByName("ENGINE_UPGRADE_CONFIRM")
local TURRET_UPGRADE_DENY = World.FindObjectByName("TURRET_UPGRADE_DENY")

local ENGINE_UPGRADE_CONFIRM = World.FindObjectByName("ENGINE_UPGRADE_CONFIRM")
local ENGINE_UPGRADE_DENY = World.FindObjectByName("ENGINE_UPGRADE_DENY")

-- CONNECTING HOVER_PANELS
local PREMIUM_SHOP_HOVER = World.FindObjectByName("PREMIUM_SHOP_HOVER")
local ACHIEVEMENTS_HOVER = World.FindObjectByName("ACHIEVEMENTS_HOVER")
local LEADERBOARDS_HOVER = World.FindObjectByName("LEADERBOARDS_HOVER")
local CHOOSE_MODE_DROPDOWN_HOVER = World.FindObjectByName("CHOOSE_MODE_DROPDOWN_HOVER")
local CHOOSE_MODE_FIELDS_HOVER = World.FindObjectByName("CHOOSE_MODE_FIELDS_HOVER")
local CHOOSE_MODE_DESERT_HOVER = World.FindObjectByName("CHOOSE_MODE_DESERT_HOVER")
local CHOOSE_MODE_TUNDRA_HOVER = World.FindObjectByName("CHOOSE_MODE_TUNDRA_HOVER")
local DEPLOY_HOVER = World.FindObjectByName("DEPLOY_HOVER")

-- CONNECTING ACTIVE_PANELS
local PREMIUM_SHOP_ACTIVE = World.FindObjectByName("PREMIUM_SHOP_ACTIVE")
local ACHIEVEMENTS_ACTIVE = World.FindObjectByName("ACHIEVEMENTS_ACTIVE")
local LEADERBOARDS_ACTIVE = World.FindObjectByName("LEADERBOARDS_ACTIVE")

-- CONNECTING TEXT
local USERNAME = World.FindObjectByName("USERNAME")
local USERNAME_SECONDARY = World.FindObjectByName("USERNAME_SECONDARY")

local CHOSEN_MODE_LIGHT = World.FindObjectByName("CHOSEN_MODE_LIGHT")
local CHOSEN_MODE_SECONDARY = World.FindObjectByName("CHOSEN_MODE_SECONDARY")
local CHOSEN_MODE_SHADOW = World.FindObjectByName("CHOSEN_MODE_SHADOW")

-- SETTINGS FOR SLIDING MODE CHOICE MENU
local OPEN_DROPDOWN_Y = script:GetCustomProperty("OPEN_DROPDOWN_Y")
local CLOSED_DROPDOWN_Y = script:GetCustomProperty("CLOSED_DROPDOWN_Y")
local DROPDOWN_TOGGLE_TIME = script:GetCustomProperty("DROPDOWN_TOGGLE_TIME")
local isMoving = false
local targetDestination = CLOSED_Y
local timeRemaining = 1

-- SETTINGS FOR SLIDING MENU TANK UPGRADES
local TANKUPGRADE_CONFIRM_OPEN_DROPDOWN_Y = script:GetCustomProperty("TANKUPGRADE_CONFIRM_OPEN_DROPDOWN_Y")
local TANKUPGRADE_CONFIRM_CLOSED_DROPDOWN_Y = script:GetCustomProperty("TANKUPGRADE_CONFIRM_CLOSED_DROPDOWN_Y")
local TANKUPGRADE_CONFIRM_DROPDOWN_TOGGLE_TIME = script:GetCustomProperty("TANKUPGRADE_CONFIRM_DROPDOWN_TOGGLE_TIME")
local TANKUPGRADE_CONFIRM_timeRemaining = 1

local TANKUPGRADE_DENY_OPEN_DROPDOWN_Y = script:GetCustomProperty("TANKUPGRADE_DENY_OPEN_DROPDOWN_Y")
local TANKUPGRADE_DENY_CLOSED_DROPDOWN_Y = script:GetCustomProperty("TANKUPGRADE_DENY_CLOSED_DROPDOWN_Y")
local TANKUPGRADE_DENY_DROPDOWN_TOGGLE_TIME = script:GetCustomProperty("TANKUPGRADE_DENY_DROPDOWN_TOGGLE_TIME")
local TANKUPGRADE_DENY_timeRemaining = 1

-- SETTINGS FOR SLIDING MENU CONFIRM SHELL UPGRADE
local SHELL_CONFIRM_isMoving = false
local SHELL_CONFIRM_targetDestination = TANKUPGRADE_CONFIRM_CLOSED_DROPDOWN_Y

-- SETTINGS FOR SLIDING MENU DENY SHELL UPGRADE
local SHELL_DENY_isMoving = false
local SHELL_DENY_targetDestination = TANKUPGRADE_DENY_CLOSED_DROPDOWN_Y

-- SETTINGS FOR SLIDING MENU CONFIRM TURRET UPGRADE
local TURRET_CONFIRM_isMoving = false
local TURRET_CONFIRM_targetDestination = TANKUPGRADE_CONFIRM_CLOSED_DROPDOWN_Y

-- SETTINGS FOR SLIDING MENU DENY TURRET UPGRADE
local TURRET_DENY_isMoving = false
local TURRET_DENY_targetDestination = TANKUPGRADE_DENY_CLOSED_DROPDOWN_Y

-- SETTINGS FOR SLIDING MENU CONFIRM ENGINE UPGRADE
local ENGINE_CONFIRM_isMoving = false
local ENGINE_CONFIRM_targetDestination = TANKUPGRADE_CONFIRM_CLOSED_DROPDOWN_Y

-- SETTINGS FOR SLIDING MENU DENY ENGINE UPGRADE
local ENGINE_DENY_isMoving = false
local ENGINE_DENY_targetDestination = TANKUPGRADE_DENY_CLOSED_DROPDOWN_Y

------------------------------------------------------------------------------------------
---- HANDLING DROPDOWN SLIDER
function Tick(deltaTime)

	Task.Wait(0.01)
	
	if isMoving then
		timeRemaining = CoreMath.Clamp(timeRemaining - deltaTime, 0, DROPDOWN_TOGGLE_TIME)
		local newPosition = 0
		if targetDestination == OPEN_DROPDOWN_Y then
			newPosition = CoreMath.Lerp(CLOSED_DROPDOWN_Y, OPEN_DROPDOWN_Y, (DROPDOWN_TOGGLE_TIME - timeRemaining) / DROPDOWN_TOGGLE_TIME)
		else
			newPosition = CoreMath.Lerp(OPEN_DROPDOWN_Y, CLOSED_DROPDOWN_Y, (DROPDOWN_TOGGLE_TIME - timeRemaining) / DROPDOWN_TOGGLE_TIME)
		end
		
		CHOOSE_MODE.y = newPosition
		
		if timeRemaining <= 0 then
			isMoving = false
		end
	end
	
	if SHELL_CONFIRM_isMoving then
		TANKUPGRADE_CONFIRM_timeRemaining = CoreMath.Clamp(TANKUPGRADE_CONFIRM_timeRemaining - deltaTime, 0, TANKUPGRADE_CONFIRM_DROPDOWN_TOGGLE_TIME)
		local SHELL_CONFIRM_newPosition = 0
		if SHELL_CONFIRM_targetDestination == TANKUPGRADE_CONFIRM_OPEN_DROPDOWN_Y then
			SHELL_CONFIRM_newPosition = CoreMath.Lerp(TANKUPGRADE_CONFIRM_CLOSED_DROPDOWN_Y, TANKUPGRADE_CONFIRM_OPEN_DROPDOWN_Y, (TANKUPGRADE_CONFIRM_DROPDOWN_TOGGLE_TIME - TANKUPGRADE_CONFIRM_timeRemaining) / TANKUPGRADE_CONFIRM_DROPDOWN_TOGGLE_TIME)
		else
			SHELL_CONFIRM_newPosition = CoreMath.Lerp(TANKUPGRADE_CONFIRM_OPEN_DROPDOWN_Y, TANKUPGRADE_CONFIRM_CLOSED_DROPDOWN_Y, (TANKUPGRADE_CONFIRM_DROPDOWN_TOGGLE_TIME - TANKUPGRADE_CONFIRM_timeRemaining) / TANKUPGRADE_CONFIRM_DROPDOWN_TOGGLE_TIME)
		end
		
		SHELL_UPGRADE_CONFIRM.y = SHELL_CONFIRM_newPosition
		
		if TANKUPGRADE_CONFIRM_timeRemaining <= 0 then
			SHELL_CONFIRM_isMoving = false
		end
	end
	
	if SHELL_DENY_isMoving then
		TANKUPGRADE_DENY_timeRemaining = CoreMath.Clamp(TANKUPGRADE_DENY_timeRemaining - deltaTime, 0, TANKUPGRADE_DENY_DROPDOWN_TOGGLE_TIME)
		local SHELL_DENY_newPosition = 0
		if SHELL_DENY_targetDestination == TANKUPGRADE_DENY_OPEN_DROPDOWN_Y  then
			SHELL_DENY_newPosition = CoreMath.Lerp(TANKUPGRADE_DENY_CLOSED_DROPDOWN_Y, TANKUPGRADE_DENY_OPEN_DROPDOWN_Y, (TANKUPGRADE_DENY_DROPDOWN_TOGGLE_TIME - TANKUPGRADE_DENY_timeRemaining) / TANKUPGRADE_DENY_DROPDOWN_TOGGLE_TIME)
		else
			SHELL_DENY_newPosition = CoreMath.Lerp(TANKUPGRADE_DENY_OPEN_DROPDOWN_Y, TANKUPGRADE_DENY_CLOSED_DROPDOWN_Y, (TANKUPGRADE_DENY_DROPDOWN_TOGGLE_TIME - TANKUPGRADE_DENY_timeRemaining) / TANKUPGRADE_DENY_DROPDOWN_TOGGLE_TIME)
		end
		
		SHELL_DENY_CONFIRM.y = SHELL_DENY_newPosition
		
		if TANKUPGRADE_DENY_timeRemaining <= 0 then
			SHELL_DENY_isMoving = false
		end
	end
	
	if TURRET_CONFIRM_isMoving then
		TANKUPGRADE_CONFIRM_timeRemaining = CoreMath.Clamp(TANKUPGRADE_CONFIRM_timeRemaining - deltaTime, 0, TANKUPGRADE_CONFIRM_DROPDOWN_TOGGLE_TIME)
		local TURRET_CONFIRM_newPosition = 0
		if TURRET_CONFIRM_targetDestination == TANKUPGRADE_CONFIRM_OPEN_DROPDOWN_Y then
			TURRET_CONFIRM_newPosition = CoreMath.Lerp(TANKUPGRADE_CONFIRM_CLOSED_DROPDOWN_Y, TANKUPGRADE_CONFIRM_OPEN_DROPDOWN_Y, (TANKUPGRADE_CONFIRM_DROPDOWN_TOGGLE_TIME - TANKUPGRADE_CONFIRM_timeRemaining) / TANKUPGRADE_CONFIRM_DROPDOWN_TOGGLE_TIME)
		else
			TURRET_CONFIRM_newPosition = CoreMath.Lerp(TANKUPGRADE_CONFIRM_OPEN_DROPDOWN_Y, TANKUPGRADE_CONFIRM_CLOSED_DROPDOWN_Y, (TANKUPGRADE_CONFIRM_DROPDOWN_TOGGLE_TIME - TANKUPGRADE_CONFIRM_timeRemaining) / TANKUPGRADE_CONFIRM_DROPDOWN_TOGGLE_TIME)
		end
		
		TURRET_UPGRADE_CONFIRM.y = TURRET_CONFIRM_newPosition
		
		if TANKUPGRADE_CONFIRM_timeRemaining <= 0 then
			TURRET_CONFIRM_isMoving = false
		end
	end
	
	if TURRET_DENY_isMoving then
		TANKUPGRADE_DENY_timeRemaining = CoreMath.Clamp(TANKUPGRADE_DENY_timeRemaining - deltaTime, 0, TANKUPGRADE_DENY_DROPDOWN_TOGGLE_TIME)
		local TURRET_DENY_newPosition = 0
		if TURRET_DENY_targetDestination == TANKUPGRADE_DENY_OPEN_DROPDOWN_Y  then
			TURRET_DENY_newPosition = CoreMath.Lerp(TANKUPGRADE_DENY_OPEN_DROPDOWN_Y, TURRET_DENY_OPEN_DROPDOWN_Y, (TANKUPGRADE_DENY_DROPDOWN_TOGGLE_TIME - TANKUPGRADE_DENY_timeRemaining) / TANKUPGRADE_DENY_DROPDOWN_TOGGLE_TIME)
		else
			TURRET_DENY_newPosition = CoreMath.Lerp(TURRET_DENY_OPEN_DROPDOWN_Y, TANKUPGRADE_DENY_OPEN_DROPDOWN_Y, (TANKUPGRADE_DENY_DROPDOWN_TOGGLE_TIME - TANKUPGRADE_DENY_timeRemaining) / TANKUPGRADE_DENY_DROPDOWN_TOGGLE_TIME)
		end
		
		TURRET_DENY_CONFIRM.y = TURRET_DENY_newPosition
		
		if TANKUPGRADE_DENY_timeRemaining <= 0 then
			TURRET_DENY_isMoving = false
		end
	end
	
	if ENGINE_CONFIRM_isMoving then
		TANKUPGRADE_CONFIRM_timeRemaining = CoreMath.Clamp(TANKUPGRADE_CONFIRM_timeRemaining - deltaTime, 0, TANKUPGRADE_CONFIRM_DROPDOWN_TOGGLE_TIME)
		local ENGINE_CONFIRM_newPosition = 0
		if ENGINE_CONFIRM_targetDestination == TANKUPGRADE_CONFIRM_OPEN_DROPDOWN_Y then
			ENGINE_CONFIRM_newPosition = CoreMath.Lerp(TANKUPGRADE_CONFIRM_CLOSED_DROPDOWN_Y, TANKUPGRADE_CONFIRM_OPEN_DROPDOWN_Y, (TANKUPGRADE_CONFIRM_DROPDOWN_TOGGLE_TIME - TANKUPGRADE_CONFIRM_timeRemaining) / TANKUPGRADE_CONFIRM_DROPDOWN_TOGGLE_TIME)
		else
			ENGINE_CONFIRM_newPosition = CoreMath.Lerp(TANKUPGRADE_CONFIRM_OPEN_DROPDOWN_Y, TANKUPGRADE_CONFIRM_CLOSED_DROPDOWN_Y, (TANKUPGRADE_CONFIRM_DROPDOWN_TOGGLE_TIME - TANKUPGRADE_CONFIRM_timeRemaining) / TANKUPGRADE_CONFIRM_DROPDOWN_TOGGLE_TIME)
		end
		
		ENGINE_UPGRADE_CONFIRM.y = ENGINE_CONFIRM_newPosition
		
		if TANKUPGRADE_CONFIRM_timeRemaining <= 0 then
			ENGINE_CONFIRM_isMoving = false
		end
	end
	
	if ENGINE_DENY_isMoving then
		TANKUPGRADE_DENY_timeRemaining = CoreMath.Clamp(TANKUPGRADE_DENY_timeRemaining - deltaTime, 0, TANKUPGRADE_DENY_DROPDOWN_TOGGLE_TIME)
		local ENGINE_DENY_newPosition = 0
		if ENGINE_DENY_targetDestination == TANKUPGRADE_DENY_OPEN_DROPDOWN_Y  then
			ENGINE_DENY_newPosition = CoreMath.Lerp(TANKUPGRADE_DENY_CLOSED_DROPDOWN_Y, TANKUPGRADE_DENY_OPEN_DROPDOWN_Y, (TANKUPGRADE_DENY_DROPDOWN_TOGGLE_TIME - TANKUPGRADE_DENY_timeRemaining) / TANKUPGRADE_DENY_DROPDOWN_TOGGLE_TIME)
		else
			ENGINE_DENY_newPosition = CoreMath.Lerp(TANKUPGRADE_DENY_OPEN_DROPDOWN_Y, TANKUPGRADE_DENY_CLOSED_DROPDOWN_Y, (TANKUPGRADE_DENY_DROPDOWN_TOGGLE_TIME - TANKUPGRADE_DENY_timeRemaining) / TANKUPGRADE_DENY_DROPDOWN_TOGGLE_TIME)
		end
		
		ENGINE_DENY_CONFIRM.y = ENGINE_DENY_newPosition
		
		if TANKUPGRADE_DENY_timeRemaining <= 0 then
			ENGINE_DENY_isMoving = false
		end
	end
	
	
end

---- HANDLING TOGGLE DROPDOWN MENU
-- TOGGLE BOTH
function TOGGLE_DROPDOWN()
	if CHOOSE_MODE.y == CLOSED_DROPDOWN_Y then
	CHOOSE_MODE_DROPDOWN_ARROW_OPEN.visibility = Visibility.FORCE_OFF
	CHOOSE_MODE_DROPDOWN_ARROW_CLOSE.visibility = Visibility.FORCE_ON
	SFX_SLIDE_DOWN:Play()
		if isMoving and timeRemaining > 0 then
			targetDestination = OPEN_DROPDOWN_Y
			timeRemaining = DROPDOWN_TOGGLE_TIME - timeRemaining
		else
			isMoving = true
			targetDestination = OPEN_DROPDOWN_Y
			timeRemaining = DROPDOWN_TOGGLE_TIME
		end
	else
	CHOOSE_MODE_DROPDOWN_ARROW_OPEN.visibility = Visibility.FORCE_ON
	CHOOSE_MODE_DROPDOWN_ARROW_CLOSE.visibility = Visibility.FORCE_OFF
	SFX_SLIDE_UP:Play()
		if isMoving and timeRemaining > 0 then
			targetDestination = CLOSED_DROPDOWN_Y
			timeRemaining = DROPDOWN_TOGGLE_TIME - timeRemaining
		else
			isMoving = true
			targetDestination = CLOSED_DROPDOWN_Y
			timeRemaining = DROPDOWN_TOGGLE_TIME
		end
	end
end

-- TOGGLE CHOOSE_MODE OPEN
function TOGGLE_DROPDOWN_OPEN()
	if CHOOSE_MODE.y == CLOSED_DROPDOWN_Y then
		CHOOSE_MODE_DROPDOWN_ARROW_OPEN.visibility = Visibility.FORCE_OFF
		CHOOSE_MODE_DROPDOWN_ARROW_CLOSE.visibility = Visibility.FORCE_ON
		CHOOSE_MODE_DROPDOWN_HOVER.visibility = Visibility.FORCE_ON
		SFX_SLIDE_DOWN:Play()
		if isMoving and timeRemaining > 0 then
			targetDestination = OPEN_DROPDOWN_Y
			timeRemaining = DROPDOWN_TOGGLE_TIME - timeRemaining
		else
			isMoving = true
			targetDestination = OPEN_DROPDOWN_Y
			timeRemaining = DROPDOWN_TOGGLE_TIME
		end
	end
end


-- TOGGLE CHOOSE_MODE CLOSE
function TOGGLE_DROPDOWN_CLOSE()
	if CHOOSE_MODE.y == OPEN_DROPDOWN_Y then
		CHOOSE_MODE_DROPDOWN_ARROW_OPEN.visibility = Visibility.FORCE_ON
		CHOOSE_MODE_DROPDOWN_ARROW_CLOSE.visibility = Visibility.FORCE_OFF
		SFX_SLIDE_UP:Play()
		if isMoving and timeRemaining > 0 then
			targetDestination = CLOSED_DROPDOWN_Y
			timeRemaining = DROPDOWN_TOGGLE_TIME - timeRemaining
		else
			isMoving = true
			targetDestination = CLOSED_DROPDOWN_Y
			timeRemaining = DROPDOWN_TOGGLE_TIME
		end
	end
end

-- TOGGLE SHELL_UPGRADE_CONFIRM OPEN
function TOGGLE_SHELL_UPGRADE_CONFIRM_OPEN()
	if SHELL_UPGRADE_CONFIRM.y == TANKUPGRADE_CONFIRM_CLOSED_DROPDOWN_Y then
		SFX_SLIDE_DOWN:Play()
		if SHELL_CONFIRM_isMoving and TANKUPGRADE_CONFIRM_timeRemaining > 0 then
			SHELL_CONFIRM_targetDestination = TANKUPGRADE_CONFIRM_OPEN_DROPDOWN_Y
			TANKUPGRADE_CONFIRM_timeRemaining = TANKUPGRADE_CONFIRM_DROPDOWN_TOGGLE_TIME - TANKUPGRADE_CONFIRM_timeRemaining
		else
			SHELL_CONFIRM_isMoving = true
			SHELL_CONFIRM_targetDestination = TANKUPGRADE_CONFIRM_OPEN_DROPDOWN_Y
			TANKUPGRADE_CONFIRM_timeRemaining = TANKUPGRADE_CONFIRM_DROPDOWN_TOGGLE_TIME
		end
	end
end

-- TOGGLE SHELL_UPGRADE_CONFIRM CLOSE
function TOGGLE_SHELL_UPGRADE_CONFIRM_CLOSE()
	if SHELL_UPGRADE_CONFIRM.y == TANKUPGRADE_CONFIRM_OPEN_DROPDOWN_Y then
		SFX_SLIDE_UP:Play()
		if SHELL_CONFIRM_isMoving and TANKUPGRADE_CONFIRM_timeRemaining > 0 then
			SHELL_CONFIRM_targetDestination = TANKUPGRADE_CONFIRM_CLOSED_DROPDOWN_Y
			TANKUPGRADE_CONFIRM_timeRemaining = TANKUPGRADE_CONFIRM_DROPDOWN_TOGGLE_TIME - TANKUPGRADE_CONFIRM_timeRemaining
		else
			SHELL_CONFIRM_isMoving = true
			SHELL_CONFIRM_targetDestination = TANKUPGRADE_CONFIRM_CLOSED_DROPDOWN_Y
			TANKUPGRADE_CONFIRM_timeRemaining = TANKUPGRADE_CONFIRM_DROPDOWN_TOGGLE_TIME
		end
	end
end

-- TOGGLE SHELL_UPGRADE_DENY OPEN
function TOGGLE_SHELL_UPGRADE_DENY_OPEN()
	if SHELL_UPGRADE_DENY.y == TANKUPGRADE_DENY_OPEN_DROPDOWN_Y  then
		SFX_SLIDE_DOWN:Play()
		if SHELL_DENY_isMoving and TANKUPGRADE_DENY_timeRemaining > 0 then
			SHELL_DENY_targetDestination = TANKUPGRADE_DENY_OPEN_DROPDOWN_Y 
			SHELL_DENY_timeRemaining = TANKUPGRADE_DENY_DROPDOWN_TOGGLE_TIME - TANKUPGRADE_DENY_timeRemaining
		else
			SHELL_DENY_isMoving = true
			SHELL_DENY_targetDestination = TANKUPGRADE_DENY_OPEN_DROPDOWN_Y 
			TANKUPGRADE_DENY_timeRemaining = TANKUPGRADE_DENY_DROPDOWN_TOGGLE_TIME
		end
	end
end

-- TOGGLE SHELL_UPGRADE_DENY CLOSE
function TOGGLE_SHELL_UPGRADE_DENY_CLOSE()
	if SHELL_UPGRADE_DENY.y == SHELL_DENY_OPEN_DROPDOWN_Y then
		SFX_SLIDE_UP:Play()
		if SHELL_DENY_isMoving and TANKUPGRADE_DENY_timeRemaining > 0 then
			SHELL_DENY_targetDestination = TANKUPGRADE_DENY_OPEN_DROPDOWN_Y 
			SHELL_DENY_timeRemaining = TANKUPGRADE_DENY_DROPDOWN_TOGGLE_TIME - TANKUPGRADE_DENY_timeRemaining
		else
			SHELL_DENY_isMoving = true
			SHELL_DENY_targetDestination = TANKUPGRADE_DENY_OPEN_DROPDOWN_Y 
			TANKUPGRADE_DENY_timeRemaining = TANKUPGRADE_DENY_DROPDOWN_TOGGLE_TIME
		end
	end
end

-- TOGGLE TURRET_UPGRADE_CONFIRM OPEN
function TOGGLE_TURRET_UPGRADE_CONFIRM_OPEN()
	if TURRET_UPGRADE_CONFIRM.y == TANKUPGRADE_CONFIRM_CLOSED_DROPDOWN_Y then
		SFX_SLIDE_DOWN:Play()
		if TURRET_CONFIRM_isMoving and TANKUPGRADE_CONFIRM_timeRemaining > 0 then
			TURRET_CONFIRM_targetDestination = TANKUPGRADE_CONFIRM_OPEN_DROPDOWN_Y
			TANKUPGRADE_CONFIRM_timeRemaining = TANKUPGRADE_CONFIRM_DROPDOWN_TOGGLE_TIME - TANKUPGRADE_CONFIRM_timeRemaining
		else
			TURRET_CONFIRM_isMoving = true
			TURRET_CONFIRM_targetDestination = TANKUPGRADE_CONFIRM_OPEN_DROPDOWN_Y
			TANKUPGRADE_CONFIRM_timeRemaining = TANKUPGRADE_CONFIRM_DROPDOWN_TOGGLE_TIME
		end
	end
end

-- TOGGLE TURRET_UPGRADE_CONFIRM CLOSE
function TOGGLE_TURRET_UPGRADE_CONFIRM_CLOSE()
	if TURRET_UPGRADE_CONFIRM.y == TANKUPGRADE_CONFIRM_OPEN_DROPDOWN_Y then
		SFX_SLIDE_UP:Play()
		if TURRET_CONFIRM_isMoving and TANKUPGRADE_CONFIRM_timeRemaining > 0 then
			TURRET_CONFIRM_targetDestination = TANKUPGRADE_CONFIRM_CLOSED_DROPDOWN_Y
			TANKUPGRADE_CONFIRM_timeRemaining = TANKUPGRADE_CONFIRM_DROPDOWN_TOGGLE_TIME - TANKUPGRADE_CONFIRM_timeRemaining
		else
			TURRET_CONFIRM_isMoving = true
			TURRET_CONFIRM_targetDestination = TANKUPGRADE_CONFIRM_CLOSED_DROPDOWN_Y
			TANKUPGRADE_CONFIRM_timeRemaining = TANKUPGRADE_CONFIRM_DROPDOWN_TOGGLE_TIME
		end
	end
end

-- TOGGLE TURRET_UPGRADE_DENY OPEN
function TOGGLE_TURRET_UPGRADE_DENY_OPEN()
	if TURRET_UPGRADE_DENY.y == TANKUPGRADE_DENY_OPEN_DROPDOWN_Y  then
		SFX_SLIDE_DOWN:Play()
		if TURRET_DENY_isMoving and TANKUPGRADE_DENY_timeRemaining > 0 then
			TURRET_DENY_targetDestination = TANKUPGRADE_DENY_OPEN_DROPDOWN_Y 
			TURRET_DENY_timeRemaining = TANKUPGRADE_DENY_DROPDOWN_TOGGLE_TIME - TANKUPGRADE_DENY_timeRemaining
		else
			TURRET_DENY_isMoving = true
			TURRET_DENY_targetDestination = TANKUPGRADE_DENY_OPEN_DROPDOWN_Y 
			TANKUPGRADE_DENY_timeRemaining = TANKUPGRADE_DENY_DROPDOWN_TOGGLE_TIME
		end
	end
end

-- TOGGLE TURRET_UPGRADE_DENY CLOSE
function TOGGLE_TURRET_UPGRADE_DENY_CLOSE()
	if TURRET_UPGRADE_DENY.y == TURRET_DENY_OPEN_DROPDOWN_Y then
		SFX_SLIDE_UP:Play()
		if TURRET_DENY_isMoving and TANKUPGRADE_DENY_timeRemaining > 0 then
			TURRET_DENY_targetDestination = TANKUPGRADE_DENY_OPEN_DROPDOWN_Y 
			TURRET_DENY_timeRemaining = TANKUPGRADE_DENY_DROPDOWN_TOGGLE_TIME - TANKUPGRADE_DENY_timeRemaining
		else
			TURRET_DENY_isMoving = true
			TURRET_DENY_targetDestination = TANKUPGRADE_DENY_OPEN_DROPDOWN_Y 
			TANKUPGRADE_DENY_timeRemaining = TANKUPGRADE_DENY_DROPDOWN_TOGGLE_TIME
		end
	end
end

-- TOGGLE TURRET_UPGRADE_CONFIRM OPEN
function TOGGLE_TURRET_UPGRADE_CONFIRM_OPEN()
	if TURRET_UPGRADE_CONFIRM.y == TANKUPGRADE_CONFIRM_CLOSED_DROPDOWN_Y then
		SFX_SLIDE_DOWN:Play()
		if TURRET_CONFIRM_isMoving and TANKUPGRADE_CONFIRM_timeRemaining > 0 then
			TURRET_CONFIRM_targetDestination = TANKUPGRADE_CONFIRM_OPEN_DROPDOWN_Y
			TANKUPGRADE_CONFIRM_timeRemaining = TANKUPGRADE_CONFIRM_DROPDOWN_TOGGLE_TIME - TANKUPGRADE_CONFIRM_timeRemaining
		else
			TURRET_CONFIRM_isMoving = true
			TURRET_CONFIRM_targetDestination = TANKUPGRADE_CONFIRM_OPEN_DROPDOWN_Y
			TANKUPGRADE_CONFIRM_timeRemaining = TANKUPGRADE_CONFIRM_DROPDOWN_TOGGLE_TIME
		end
	end
end

-- TOGGLE TURRET_UPGRADE_CONFIRM CLOSE
function TOGGLE_TURRET_UPGRADE_CONFIRM_CLOSE()
	if TURRET_UPGRADE_CONFIRM.y == TANKUPGRADE_CONFIRM_OPEN_DROPDOWN_Y then
		SFX_SLIDE_UP:Play()
		if TURRET_CONFIRM_isMoving and TANKUPGRADE_CONFIRM_timeRemaining > 0 then
			TURRET_CONFIRM_targetDestination = TANKUPGRADE_CONFIRM_CLOSED_DROPDOWN_Y
			TANKUPGRADE_CONFIRM_timeRemaining = TANKUPGRADE_CONFIRM_DROPDOWN_TOGGLE_TIME - TANKUPGRADE_CONFIRM_timeRemaining
		else
			TURRET_CONFIRM_isMoving = true
			TURRET_CONFIRM_targetDestination = TANKUPGRADE_CONFIRM_CLOSED_DROPDOWN_Y
			TANKUPGRADE_CONFIRM_timeRemaining = TANKUPGRADE_CONFIRM_DROPDOWN_TOGGLE_TIME
		end
	end
end

-- TOGGLE ENGINE_UPGRADE_CONFIRM OPEN
function TOGGLE_ENGINE_UPGRADE_CONFIRM_OPEN()
	if ENGINE_UPGRADE_CONFIRM.y == TANKUPGRADE_CONFIRM_CLOSED_DROPDOWN_Y then
		SFX_SLIDE_DOWN:Play()
		if ENGINE_CONFIRM_isMoving and TANKUPGRADE_CONFIRM_timeRemaining > 0 then
			ENGINE_CONFIRM_targetDestination = TANKUPGRADE_CONFIRM_OPEN_DROPDOWN_Y
			ENGINE_CONFIRM_timeRemaining = TANKUPGRADE_CONFIRM_DROPDOWN_TOGGLE_TIME - TANKUPGRADE_CONFIRM_timeRemaining
		else
			ENGINE_CONFIRM_isMoving = true
			ENGINE_CONFIRM_targetDestination = TANKUPGRADE_CONFIRM_OPEN_DROPDOWN_Y
			ENGINE_CONFIRM_timeRemaining = TANKUPGRADE_CONFIRM_DROPDOWN_TOGGLE_TIME
		end
	end
end

-- TOGGLE ENGINE_UPGRADE_CONFIRM CLOSE
function TOGGLE_ENGINE_UPGRADE_CONFIRM_CLOSE()
	if ENGINE_UPGRADE_CONFIRM.y == TANKUPGRADE_CONFIRM_OPEN_DROPDOWN_Y then
		SFX_SLIDE_UP:Play()
		if ENGINE_CONFIRM_isMoving and TANKUPGRADE_CONFIRM_timeRemaining > 0 then
			ENGINE_CONFIRM_targetDestination = TANKUPGRADE_CONFIRM_CLOSED_DROPDOWN_Y
			ENGINE_CONFIRM_timeRemaining = TANKUPGRADE_CONFIRM_DROPDOWN_TOGGLE_TIME - TANKUPGRADE_CONFIRM_timeRemaining
		else
			ENGINE_CONFIRM_isMoving = true
			ENGINE_CONFIRM_targetDestination = TANKUPGRADE_CONFIRM_CLOSED_DROPDOWN_Y
			ENGINE_CONFIRM_timeRemaining = TANKUPGRADE_CONFIRM_DROPDOWN_TOGGLE_TIME
		end
	end
end

-- TOGGLE ENGINE_UPGRADE_DENY OPEN
function TOGGLE_ENGINE_UPGRADE_DENY_OPEN()
	if ENGINE_UPGRADE_DENY.y == TANKUPGRADE_CONFIRM_CLOSED_DROPDOWN_Y then
		SFX_SLIDE_DOWN:Play()
		if ENGINE_DENY_isMoving and TANKUPGRADE_DENY_timeRemaining > 0 then
			ENGINE_DENY_targetDestination = TANKUPGRADE_DENY_OPEN_DROPDOWN_Y 
			ENGINE_DENY_timeRemaining = TANKUPGRADE_DENY_DROPDOWN_TOGGLE_TIME - TANKUPGRADE_DENY_timeRemaining
		else
			ENGINE_DENY_isMoving = true
			ENGINE_DENY_targetDestination = TANKUPGRADE_DENY_OPEN_DROPDOWN_Y 
			ENGINE_DENY_timeRemaining = TANKUPGRADE_DENY_DROPDOWN_TOGGLE_TIME
		end
	end
end

-- TOGGLE ENGINE_UPGRADE_DENY CLOSE
function TOGGLE_ENGINE_UPGRADE_DENY_CLOSE()
	if ENGINE_UPGRADE_DENY.y == ENGINE_DENY_OPEN_DROPDOWN_Y then
		SFX_SLIDE_UP:Play()
		if ENGINE_DENY_isMoving and TANKUPGRADE_DENY_timeRemaining > 0 then
			ENGINE_DENY_targetDestination = TANKUPGRADE_CONFIRM_CLOSED_DROPDOWN_Y
			ENGINE_DENY_timeRemaining = TANKUPGRADE_DENY_DROPDOWN_TOGGLE_TIME - TANKUPGRADE_DENY_timeRemaining
		else
			ENGINE_DENY_isMoving = true
			ENGINE_DENY_targetDestination = TANKUPGRADE_CONFIRM_CLOSED_DROPDOWN_Y
			ENGINE_DENY_timeRemaining = TANKUPGRADE_DENY_DROPDOWN_TOGGLE_TIME
		end
	end
end

---- HANDLING BUTTON RESPONSES
-- PREMIUM_SHOP BUTTON HANDLER
function CLICKED_PREMIUM_SHOP(BUTTON_PREMIUM_SHOP)
	SFX_CLICK:Play()
	ACTIVE_HEAD_MENU = 1
end

function HOVERED_PREMIUM_SHOP(BUTTON_PREMIUM_SHOP)
	SFX_HOVER:Play()
	HOVER_HEAD_MENU = 1
end

function UNHOVERED_PREMIUM_SHOP(BUTTON_PREMIUM_SHOP)
	HOVER_HEAD_MENU = 0
end

-- ACHIEVEMENTS BUTTON HANDLER
function CLICKED_ACHIEVEMENTS(BUTTON_ACHIEVEMENTS)
	SFX_CLICK:Play()
	ACTIVE_HEAD_MENU = 2
end

function HOVERED_ACHIEVEMENTS(BUTTON_ACHIEVEMENTS)
	SFX_HOVER:Play()
	HOVER_HEAD_MENU = 2
end

function UNHOVERED_ACHIEVEMENTS(BUTTON_ACHIEVEMENTS)
	HOVER_HEAD_MENU = 0
end

-- LEADERBOARDS BUTTON HANDLER
function CLICKED_LEADERBOARDS(BUTTON_LEADERBOARDS)
	SFX_CLICK:Play()
	ACTIVE_HEAD_MENU = 3
end

function HOVERED_LEADERBOARDS(BUTTON_LEADERBOARDS)
	SFX_HOVER:Play()
	HOVER_HEAD_MENU = 3
end

function UNHOVERED_LEADERBOARDS(BUTTON_LEADERBOARDS)
	HOVER_HEAD_MENU = 0
end

-- CHOOSE MODE DROPDOWN
function CLICKED_CHOOSE_MODE(CHOOSE_MODE_BUTTON)
	TOGGLE_DROPDOWN()
end

function HOVERED_CHOOSE_MODE(CHOOSE_MODE_BUTTON)
	CHOOSE_MODE_DROPDOWN_HOVER.visibility = Visibility.FORCE_ON
end

function UNHOVERED_CHOOSE_MODE(CHOOSE_MODE_BUTTON)
	if CHOOSE_MODE.y == CLOSED_DROPDOWN_Y then
	CHOOSE_MODE_DROPDOWN_HOVER.visibility = Visibility.FORCE_OFF
	else
		return
	end
end

-- CHOOSE_MODE_FIELDS BUTTON HANDLER
function CLICKED_CHOOSE_MODE_FIELDS(CHOOSE_MODE_FIELDS_BUTTON)
	SFX_CLICK:Play()
	CHOOSE_MODE_DROPDOWN_HOVER.visibility = Visibility.FORCE_OFF
	DEPLOY.visibility = Visibility.FORCE_ON
	DEPLOY_IDLE.visibility = Visibility.FORCE_OFF
	CHOSEN_MODE= 1
	TOGGLE_DROPDOWN_CLOSE()
end

function HOVERED_CHOOSE_MODE_FIELDS(CHOOSE_MODE_FIELDS_BUTTON)
	SFX_HOVER:Play()
	HOVERED_MODE= 1
end

function UNHOVERED_CHOOSE_MODE_FIELDS(CHOOSE_MODE_FIELDS_BUTTON)
	HOVERED_MODE= 0
end

-- CHOOSE_MODE_DESERT BUTTON HANDLER
function CLICKED_CHOOSE_MODE_DESERT(CHOOSE_MODE_DESERT_BUTTON)
	SFX_CLICK:Play()
	CHOOSE_MODE_DROPDOWN_HOVER.visibility = Visibility.FORCE_OFF
	DEPLOY.visibility = Visibility.FORCE_ON
	DEPLOY_IDLE.visibility = Visibility.FORCE_OFF
	CHOSEN_MODE= 2
	TOGGLE_DROPDOWN_CLOSE()
end

function HOVERED_CHOOSE_MODE_DESERT(CHOOSE_MODE_DESERT_BUTTON)
	SFX_HOVER:Play()
	HOVERED_MODE= 2
end

function UNHOVERED_CHOOSE_MODE_DESERT(CHOOSE_MODE_DESERT_BUTTON)
	HOVERED_MODE= 0
end

-- CHOOSE_MODE_TUNDRA BUTTON HANDLER
function CLICKED_CHOOSE_MODE_TUNDRA(CHOOSE_MODE_TUNDRA_BUTTON)
	SFX_CLICK:Play()
	CHOOSE_MODE_DROPDOWN_HOVER.visibility = Visibility.FORCE_OFF
	DEPLOY.visibility = Visibility.FORCE_ON
	DEPLOY_IDLE.visibility = Visibility.FORCE_OFF
	CHOSEN_MODE= 3
	TOGGLE_DROPDOWN_CLOSE()
end

function HOVERED_CHOOSE_MODE_TUNDRA(CHOOSE_MODE_TUNDRA_BUTTON)
	SFX_HOVER:Play()
	HOVERED_MODE= 3
end

function UNHOVERED_CHOOSE_MODE_TUNDRA(CHOOSE_MODE_TUNDRA_BUTTON)
	HOVERED_MODE= 0
end

-- GO TO WAR BUTTON HANDLER
function CLICKED_DEPLOY(DEPLOY_BUTTON)
	if CHOSEN_MODE== 0 then
		TOGGLE_DROPDOWN_OPEN()
	else
		return
	end
	-- add here elseif teleporting to chosen MODE
	-- if CHOSEN_MODE== 1 > Fields
	-- if CHOSEN_MODE== 2 > Desert
	-- if CHOSEN_MODE== 3 > Tundra
end

function HOVERED_DEPLOY(DEPLOY_BUTTON)
	if CHOSEN_MODE>= 1 then
	DEPLOY_HOVER.visibility = Visibility.FORCE_ON
	DEPLOY.visibility = Visibility.FORCE_OFF
	else
		return
	end
end

function UNHOVERED_DEPLOY(DEPLOY_BUTTON)
	if CHOSEN_MODE>= 1 then
	DEPLOY_HOVER.visibility = Visibility.FORCE_OFF
	DEPLOY.visibility = Visibility.FORCE_ON
	else
		return
	end
end

------------------------------------------------------------------------------------------
-- DISPLAYING / HIDING PANELS 

function CHECK_STATE()
	Task.Wait(0.01) 
	
	if ACTIVE_HEAD_MENU == 0 then
	PREMIUM_SHOP_ACTIVE.visibility = Visibility.FORCE_OFF
	ACHIEVEMENTS_ACTIVE.visibility = Visibility.FORCE_OFF
	LEADERBOARDS_ACTIVE.visibility = Visibility.FORCE_OFF
	elseif ACTIVE_HEAD_MENU == 1 then
	PREMIUM_SHOP_ACTIVE.visibility = Visibility.FORCE_ON
	ACHIEVEMENTS_ACTIVE.visibility = Visibility.FORCE_OFF
	LEADERBOARDS_ACTIVE.visibility = Visibility.FORCE_OFF
	elseif ACTIVE_HEAD_MENU == 2 then
	PREMIUM_SHOP_ACTIVE.visibility = Visibility.FORCE_OFF
	ACHIEVEMENTS_ACTIVE.visibility = Visibility.FORCE_ON
	LEADERBOARDS_ACTIVE.visibility = Visibility.FORCE_OFF
	elseif ACTIVE_HEAD_MENU == 3 then
	PREMIUM_SHOP_ACTIVE.visibility = Visibility.FORCE_OFF
	ACHIEVEMENTS_ACTIVE.visibility = Visibility.FORCE_OFF
	LEADERBOARDS_ACTIVE.visibility = Visibility.FORCE_ON
	end
	
	if HOVER_HEAD_MENU == 0 then
	PREMIUM_SHOP_HOVER.visibility = Visibility.FORCE_OFF
	ACHIEVEMENTS_HOVER.visibility = Visibility.FORCE_OFF
	LEADERBOARDS_HOVER.visibility = Visibility.FORCE_OFF
	elseif HOVER_HEAD_MENU == 1 then
	PREMIUM_SHOP_HOVER.visibility = Visibility.FORCE_ON
	ACHIEVEMENTS_HOVER.visibility = Visibility.FORCE_OFF
	LEADERBOARDS_HOVER.visibility = Visibility.FORCE_OFF
	elseif HOVER_HEAD_MENU == 2 then
	PREMIUM_SHOP_HOVER.visibility = Visibility.FORCE_OFF
	ACHIEVEMENTS_HOVER.visibility = Visibility.FORCE_ON
	LEADERBOARDS_HOVER.visibility = Visibility.FORCE_OFF
	elseif HOVER_HEAD_MENU == 3 then
	PREMIUM_SHOP_HOVER.visibility = Visibility.FORCE_OFF
	ACHIEVEMENTS_HOVER.visibility = Visibility.FORCE_OFF
	LEADERBOARDS_HOVER.visibility = Visibility.FORCE_ON
	end
		
	if HOVERED_MODE== 0 then
	CHOOSE_MODE_FIELDS_HOVER.visibility = Visibility.FORCE_OFF
	CHOOSE_MODE_DESERT_HOVER.visibility = Visibility.FORCE_OFF
	CHOOSE_MODE_TUNDRA_HOVER.visibility = Visibility.FORCE_OFF
	elseif HOVERED_MODE== 1 then
	CHOOSE_MODE_FIELDS_HOVER.visibility = Visibility.FORCE_ON
	CHOOSE_MODE_DESERT_HOVER.visibility = Visibility.FORCE_OFF
	CHOOSE_MODE_TUNDRA_HOVER.visibility = Visibility.FORCE_OFF
	elseif HOVERED_MODE== 2 then
	CHOOSE_MODE_FIELDS_HOVER.visibility = Visibility.FORCE_OFF
	CHOOSE_MODE_DESERT_HOVER.visibility = Visibility.FORCE_ON
	CHOOSE_MODE_TUNDRA_HOVER.visibility = Visibility.FORCE_OFF
	elseif HOVERED_MODE== 3 then
	CHOOSE_MODE_FIELDS_HOVER.visibility = Visibility.FORCE_OFF
	CHOOSE_MODE_DESERT_HOVER.visibility = Visibility.FORCE_OFF
	CHOOSE_MODE_TUNDRA_HOVER.visibility = Visibility.FORCE_ON
	end
		
	if CHOSEN_MODE== 0 then
	CHOSEN_MODE_LIGHT.text = "CHOOSE MODE"
	CHOSEN_MODE_SECONDARY.text = "CHOOSE MODE"
	CHOSEN_MODE_SHADOW.text = "CHOOSE MODE"
	elseif CHOSEN_MODE== 1 then
	CHOSEN_MODE_LIGHT.text = "MODE: FIELDS"
	CHOSEN_MODE_SECONDARY.text = "MODE: FIELDS"
	CHOSEN_MODE_SHADOW.text = "MODE: FIELDS"
	elseif CHOSEN_MODE== 2 then
	CHOSEN_MODE_LIGHT.text = "MODE: DESERT"
	CHOSEN_MODE_SECONDARY.text = "MODE: DESERT"
	CHOSEN_MODE_SHADOW.text = "MODE: DESERT"
	elseif CHOSEN_MODE== 3 then
	CHOSEN_MODE_LIGHT.text = "MODE: TUNDRA"
	CHOSEN_MODE_SECONDARY.text = "MODE: TUNDRA"
	CHOSEN_MODE_SHADOW.text = "MODE: TUNDRA"
	end
	
	CHECK_STATE()
end

-- INITIALISING CHECK_STATE() FUNCTION
function INITIATE_CHECK_STATE(player)
	CHECK_STATE()
end

Game.playerJoinedEvent:Connect(INITIATE_CHECK_STATE)
------------------------------------------------------------------------------------------
-- CONNECTING CLICKED EVENTS
BUTTON_PREMIUM_SHOP.clickedEvent:Connect(CLICKED_PREMIUM_SHOP)
BUTTON_ACHIEVEMENTS.clickedEvent:Connect(CLICKED_ACHIEVEMENTS)
BUTTON_LEADERBOARDS.clickedEvent:Connect(CLICKED_LEADERBOARDS)
CHOOSE_MODE_BUTTON.clickedEvent:Connect(CLICKED_CHOOSE_MODE)
CHOOSE_MODE_FIELDS_BUTTON.clickedEvent:Connect(CLICKED_CHOOSE_MODE_FIELDS)
CHOOSE_MODE_DESERT_BUTTON.clickedEvent:Connect(CLICKED_CHOOSE_MODE_DESERT)
CHOOSE_MODE_TUNDRA_BUTTON.clickedEvent:Connect(CLICKED_CHOOSE_MODE_TUNDRA)
DEPLOY_BUTTON.clickedEvent:Connect(CLICKED_DEPLOY)

-- CONNECTING HOVERED EVENTS
BUTTON_PREMIUM_SHOP.hoveredEvent:Connect(HOVERED_PREMIUM_SHOP)
BUTTON_ACHIEVEMENTS.hoveredEvent:Connect(HOVERED_ACHIEVEMENTS)
BUTTON_LEADERBOARDS.hoveredEvent:Connect(HOVERED_LEADERBOARDS)
CHOOSE_MODE_BUTTON.hoveredEvent:Connect(HOVERED_CHOOSE_MODE)
CHOOSE_MODE_FIELDS_BUTTON.hoveredEvent:Connect(HOVERED_CHOOSE_MODE_FIELDS)
CHOOSE_MODE_DESERT_BUTTON.hoveredEvent:Connect(HOVERED_CHOOSE_MODE_DESERT)
CHOOSE_MODE_TUNDRA_BUTTON.hoveredEvent:Connect(HOVERED_CHOOSE_MODE_TUNDRA)
DEPLOY_BUTTON.hoveredEvent:Connect(HOVERED_DEPLOY)

-- CONNECTING UNHOVERED EVENTS
BUTTON_PREMIUM_SHOP.unhoveredEvent:Connect(UNHOVERED_PREMIUM_SHOP)
BUTTON_ACHIEVEMENTS.unhoveredEvent:Connect(UNHOVERED_ACHIEVEMENTS)
BUTTON_LEADERBOARDS.unhoveredEvent:Connect(UNHOVERED_LEADERBOARDS)
CHOOSE_MODE_BUTTON.unhoveredEvent:Connect(UNHOVERED_CHOOSE_MODE)
CHOOSE_MODE_FIELDS_BUTTON.unhoveredEvent:Connect(UNHOVERED_CHOOSE_MODE_FIELDS)
CHOOSE_MODE_DESERT_BUTTON.unhoveredEvent:Connect(UNHOVERED_CHOOSE_MODE_DESERT)
CHOOSE_MODE_TUNDRA_BUTTON.unhoveredEvent:Connect(UNHOVERED_CHOOSE_MODE_TUNDRA)
DEPLOY_BUTTON.unhoveredEvent:Connect(UNHOVERED_DEPLOY)

-- Change MAP to MODE on all values and functions KonzZwodrei [ 07.04.2021 ]
-- Added additional functionality by USERNAME [ dd.mm.yyyyy ]
-- Added additional functionality by USERNAME [ dd.mm.yyyyy ]
-- Added additional functionality by USERNAME [ dd.mm.yyyyy ]
